let sortDirection = 1;

function loadContacts() {
    const tbody = document.getElementById("contactTableBody");
    tbody.innerHTML = "";

    contactosData.forEach(contact => {
        const row = document.createElement("tr");

        row.innerHTML = `
            <td title="${contact.NomeProprio}" onclick="showDetails(${JSON.stringify(contact).replace(/"/g, '&quot;')})">${contact.NomeProprio}</td>
            <td title="${contact.Apelido}" onclick="showDetails(${JSON.stringify(contact).replace(/"/g, '&quot;')})">${contact.Apelido}</td>
            <td title="${contact.Email}" onclick="showDetails(${JSON.stringify(contact).replace(/"/g, '&quot;')})">${contact.Email}</td>
            <td title="${contact.Cargo}" onclick="showDetails(${JSON.stringify(contact).replace(/"/g, '&quot;')})">${contact.Cargo}</td>
            <td title="${contact.Empresa}" onclick="showDetails(${JSON.stringify(contact).replace(/"/g, '&quot;')})">${contact.Empresa}</td>
            <td title="${contact.TelefoneTrabalho}" onclick="showDetails(${JSON.stringify(contact).replace(/"/g, '&quot;')})">${contact.TelefoneTrabalho}</td>
            <td title="${contact.TelefoneCasa}" onclick="showDetails(${JSON.stringify(contact).replace(/"/g, '&quot;')})">${contact.TelefoneCasa}</td>
            <td title="${contact.Telemovel}" onclick="showDetails(${JSON.stringify(contact).replace(/"/g, '&quot;')})">${contact.Telemovel}</td>
        `;
        tbody.appendChild(row);
    });

    updateResultCounter();
}

function toggleTheme() {
    const body = document.body;
    body.dataset.theme = body.dataset.theme === "dark" ? "light" : "dark";
}

function showDetails(contact) {
    const modal = document.getElementById("contactModal");
    const modalDetails = document.getElementById("modalDetails");

    modalDetails.innerHTML = `
        <strong>Nome Pr√≥prio:</strong> ${contact.NomeProprio}<br>
        <strong>Apelido:</strong> ${contact.Apelido}<br>
        <strong>Email:</strong> ${contact.Email}<br>
        <strong>Cargo:</strong> ${contact.Cargo}<br>
        <strong>Empresa:</strong> ${contact.Empresa}<br>
        <strong>Telefone de Trabalho:</strong> ${contact.TelefoneTrabalho}<br>
        <strong>Telefone de Casa:</strong> ${contact.TelefoneCasa}<br>
        <strong>Telem√≥vel:</strong> ${contact.Telemovel}
    `;

    modal.style.display = "flex";
}

function closeModal() {
    document.getElementById("contactModal").style.display = "none";
}

function showPrivacyPolicy() {
    document.getElementById("privacyModal").style.display = "flex";
}

function closePrivacyModal() {
    document.getElementById("privacyModal").style.display = "none";
}

function showAuthorModal() {
    document.getElementById("authorModal").style.display = "flex";
}

function closeAuthorModal() {
    document.getElementById("authorModal").style.display = "none";
}

function sendEmail() {
    const email = document.querySelector("#modalDetails").textContent.match(/Email:\s([\w.-]+@[\w.-]+)/);
    if (email) {
        window.location.href = `mailto:${email[1]}`;
    } else {
        alert("Para enviar um email a este contacto, insira primeiramente um endere√ßo de email.");
    }
}

function copyContact() {
    const details = document.getElementById("modalDetails").textContent;
    navigator.clipboard.writeText(details).then(() => {
        alert("Contacto copiado para a √°rea de transfer√™ncia!");
    });
}

function shareContact() {
    const details = document.getElementById("modalDetails").textContent;
    if (navigator.share) {
        navigator.share({ text: details }).catch(() => alert("Partilha n√£o suportada neste navegador."));
    } else {
        alert("O seu navegador n√£o suporta a funcionalidade de partilha.");
    }
}

function filterContacts() {
    const input = document.getElementById("searchInput").value.toLowerCase();
    const rows = document.querySelectorAll("#contactTable tbody tr");

    rows.forEach(row => {
        row.style.display = row.textContent.toLowerCase().includes(input) ? "" : "none";
    });

    updateResultCounter();
}

function clearSearch() {
    document.getElementById("searchInput").value = "";
    filterContacts();
}

function sortTable(column) {
    const rows = Array.from(document.querySelectorAll("#contactTable tbody tr"));

    rows.sort((a, b) => {
        const cellA = a.cells[column].textContent.trim().toLowerCase();
        const cellB = b.cells[column].textContent.trim().toLowerCase();

        if (cellA < cellB) return -1 * sortDirection;
        if (cellA > cellB) return 1 * sortDirection;
        return 0;
    });

    sortDirection *= -1;
    const tbody = document.getElementById("contactTableBody");
    rows.forEach(row => tbody.appendChild(row));
}

function updateResultCounter() {
    const visibleRows = Array.from(document.querySelectorAll("#contactTable tbody tr"))
        .filter(row => row.style.display !== "none");
    document.getElementById("resultCounter").textContent = `Total de contactos: ${visibleRows.length}`;
}

// Fun√ß√£o para mapear emojis para as condi√ß√µes meteorol√≥gicas
function getWeatherEmoji(description) {
    const weatherConditions = {
        // Group 2xx: Thunderstorm
        "trovoada com chuva": "‚õàÔ∏è",
        "trovoada com chuva leve": "‚õàÔ∏è",
        "trovoada com chuva forte": "‚õàÔ∏è",
        "trovoada com granizo": "üå©Ô∏è",
        "trovoada com chuva fraca": "‚õàÔ∏è",
        "trovoada com chuva moderada": "‚õàÔ∏è",
        "trovoada": "üå©Ô∏è",

        // Group 3xx: Drizzle
        "chuvisco": "üå¶Ô∏è",
        "chuvisco leve": "üå¶Ô∏è",
        "chuvisco moderado": "üåßÔ∏è",

        // Group 5xx: Rain
        "chuva leve": "üåßÔ∏è",
        "chuva moderada": "üå¶Ô∏è",
        "chuva intensa": "üåßÔ∏è",
        "chuva muito forte": "üåßÔ∏è",
        "chuva extrema": "üåßÔ∏è",
        "chuva congelante": "‚ùÑÔ∏è",

        // Group 6xx: Snow
        "neve": "‚ùÑÔ∏è",
        "neve leve": "üå®Ô∏è",
        "neve moderada": "‚ùÑÔ∏è",
        "neve intensa": "‚ùÑÔ∏è",

        // Group 7xx: Atmosphere
        "nevoeiro": "üå´Ô∏è",
        "fuma√ßa": "üå´Ô∏è",
        "poeira": "üå™Ô∏è",
        "areia": "üå™Ô∏è",

        // Group 800: Clear
        "c√©u limpo": "‚òÄÔ∏è",
        "c√©u claro": "‚òÄÔ∏è",

        // Group 80x: Clouds
        "nuvens dispersas": "üå§Ô∏è",
        "algumas nuvens": "üå•Ô∏è",
        "nublado": "‚òÅÔ∏è",
        "nuvens quebradas": "‚òÅÔ∏è",
    };

    // Procura o emoji correspondente ao estado do tempo
    for (let condition in weatherConditions) {
        if (description.toLowerCase().includes(condition)) {
            return weatherConditions[condition];
        }
    }

    // Emoji padr√£o caso a condi√ß√£o n√£o seja reconhecida
    return "üåç";
}

// Fun√ß√£o para buscar informa√ß√µes meteorol√≥gicas
function fetchWeather() {
    const apiKey = '7c12fc613b3fd9ea957d8829e99cb182';
    const url = `https://api.openweathermap.org/data/2.5/weather?lat=41.3433&lon=-6.9611&units=metric&lang=pt&appid=${apiKey}`;

    fetch(url)
        .then(response => {
            if (!response.ok) {
                throw new Error('Erro ao buscar informa√ß√µes meteorol√≥gicas.');
            }
            return response.json();
        })
        .then(data => {
            const weatherInfo = document.getElementById('weatherInfo');
            const temp = data.main.temp;
            const description = data.weather[0].description;
            let city = data.name;

            // Remove "Municipality" do nome da cidade, se estiver presente
            if (city.toLowerCase().includes("municipality")) {
                city = city.replace("Municipality", "").trim();
            }

            const emoji = getWeatherEmoji(description);

            weatherInfo.innerHTML = `Meteorologia em ${city}: ${emoji} ${temp}¬∞C, ${description}`;
        })
        .catch(error => {
            console.error(error);
            const weatherInfo = document.getElementById('weatherInfo');
            weatherInfo.textContent = 'N√£o foi poss√≠vel carregar informa√ß√µes meteorol√≥gicas.';
        });
}


function fetchInspirationalQuote() {
    // Conjunto de cita√ß√µes est√°ticas
    const quotes = [
    { content: "O sucesso √© a soma de pequenos esfor√ßos repetidos dia ap√≥s dia.", author: "Robert Collier" },
    { content: "Acredite que voc√™ pode, assim voc√™ j√° est√° no meio do caminho.", author: "Theodore Roosevelt" },
    { content: "A vida √© 10% o que acontece a voc√™ e 90% como voc√™ reage a isso.", author: "Charles R. Swindoll" },
    { content: "O √∫nico lugar onde o sucesso vem antes do trabalho √© no dicion√°rio.", author: "Vidal Sassoon" },
    { content: "Se voc√™ quer algo que nunca teve, precisa estar disposto a fazer algo que nunca fez.", author: "Thomas Jefferson" },
    { content: "N√£o importa qu√£o devagar voc√™ v√°, desde que voc√™ n√£o pare.", author: "Conf√∫cio" },
    { content: "√â sempre imposs√≠vel at√© que seja feito.", author: "Nelson Mandela" },
    { content: "Se voc√™ n√£o arriscar, ter√° que se contentar com o comum.", author: "Jim Rohn" },
    { content: "Voc√™ nunca √© velho demais para estabelecer outro objetivo ou sonhar um novo sonho.", author: "C.S. Lewis" },
    { content: "O fracasso √© apenas a oportunidade de come√ßar de novo, desta vez de forma mais inteligente.", author: "Henry Ford" },
    { content: "Nossa maior gl√≥ria n√£o est√° em nunca falhar, mas em levantar toda vez que falhamos.", author: "Conf√∫cio" },
    { content: "Coragem n√£o √© a aus√™ncia de medo; √© a conquista dele.", author: "Nelson Mandela" },
    { content: "O futuro pertence √†queles que acreditam na beleza de seus sonhos.", author: "Eleanor Roosevelt" },
    { content: "Grandes coisas nunca v√™m de zonas de conforto.", author: "Desconhecido" },
    { content: "A jornada de mil milhas come√ßa com um √∫nico passo.", author: "Lao Ts√©" },
    { content: "N√£o espere por uma oportunidade perfeita. Fa√ßa do momento perfeito para agir.", author: "George Herbert" },
    { content: "Tudo o que voc√™ pode imaginar √© real.", author: "Pablo Picasso" },
    { content: "Sua √∫nica limita√ß√£o √© a sua mente.", author: "Desconhecido" },
    { content: "O sucesso √© ir de fracasso em fracasso sem perder o entusiasmo.", author: "Winston Churchill" },
    { content: "Voc√™ √© mais forte do que pensa, mais capaz do que imagina e mais corajoso do que acredita.", author: "Desconhecido" },
    { content: "O segredo do sucesso √© come√ßar.", author: "Mark Twain" },
    { content: "N√£o conte os dias, fa√ßa os dias valerem.", author: "Muhammad Ali" },
    { content: "Seja a mudan√ßa que voc√™ quer ver no mundo.", author: "Mahatma Gandhi" },
    { content: "N√£o deixe o medo de errar impedir voc√™ de jogar.", author: "Babe Ruth" },
    { content: "O sucesso n√£o √© o fim, o fracasso n√£o √© fatal: √© a coragem para continuar que conta.", author: "Winston Churchill" },
    { content: "Os melhores sonhos acontecem quando estamos acordados.", author: "Cherie Gilderbloom" },
    { content: "A maior riqueza √© viver contente com pouco.", author: "Plat√£o" },
    { content: "Tudo parece imposs√≠vel at√© que seja feito.", author: "Nelson Mandela" },
    { content: "A melhor maneira de prever o futuro √© cri√°-lo.", author: "Peter Drucker" },
    { content: "N√£o deixe o ontem ocupar muito do hoje.", author: "Will Rogers" },
    { content: "Voc√™ n√£o precisa ser perfeito para come√ßar, mas precisa come√ßar para ser perfeito.", author: "Zig Ziglar" },
    { content: "Se voc√™ puder sonhar, voc√™ pode fazer.", author: "Walt Disney" },
    { content: "N√£o importa o qu√£o lento voc√™ v√°, desde que voc√™ n√£o pare.", author: "Conf√∫cio" },
    { content: "√â melhor falhar na originalidade do que ter sucesso na imita√ß√£o.", author: "Herman Melville" },
    { content: "O sucesso √© alcan√ßado por aqueles que continuam tentando com um pouco mais de persist√™ncia.", author: "Napoleon Hill" },
    { content: "Sonhe grande e ouse falhar.", author: "Norman Vaughan" },
    { content: "Voc√™ n√£o pode mudar o vento, mas pode ajustar as velas para alcan√ßar o seu destino.", author: "Jimmy Dean" },
    { content: "N√£o √© o que acontece com voc√™, mas como voc√™ reage que importa.", author: "Epicteto" },
    { content: "A vida n√£o √© sobre encontrar a si mesmo, √© sobre criar a si mesmo.", author: "George Bernard Shaw" },
    { content: "O que voc√™ faz hoje pode melhorar todos os seus amanh√£s.", author: "Ralph Marston" }
];


    // Seleciona uma cita√ß√£o aleat√≥ria
    const randomQuote = quotes[Math.floor(Math.random() * quotes.length)];

    // Seleciona o elemento no rodap√©
    const quoteElement = document.getElementById('quoteOfDay');

    // Exibe a cita√ß√£o e o autor
    quoteElement.innerHTML = `"${randomQuote.content}" ‚Äî <strong>${randomQuote.author}</strong>`;
}

// Inicializa√ß√£o ao carregar a p√°gina
window.onload = function () {
    loadContacts();
    fetchWeather();
    fetchInspirationalQuote(); // Fun√ß√£o para exibir a cita√ß√£o est√°tica
};
